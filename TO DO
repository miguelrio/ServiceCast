1 - Generate demand
  we will have two windows, one for sampling the demand (ground truth) and one for sending the updates
Updates can be sent:
  - synchronously (every fixed interval): interval
  - asynchronously (after a threshold crossing, compared with the last value sent): threshold
  - combination of both
2 - fix hardcoding of individual routers
  - e.g. some kind of adjacency list
        constructs the routers on the fly
        creates links on the fly
3 - write forwarding algorithm
4 - put metrics in packets

have load generater (LG) of load from a normal distribution
  - configured with a mean and a stddev
have another distribution that can update the mean of LG
  - this can be poisson, always up, always down,
  - from a time-series, or other we device
  - have a knob to adjust stddev in LG so that that range of values will be closer to mean or further away


1  LOAD TOPOLOGY
2  ALLOCATE REPLICAS
3  ALLOCATE CLIENTS
4  REPLICAS SEND LOAD
5  LOAD GETS PROPOGATED AND FORWARDING TABLE UPDATED
6  GENERATE DEMANDS - INCLUDING DURATION
7  REQUESTS GET PROPOGATED TOWARDS REPLICA
8  REPLICAS UPDATE INTERNAL LOAD INFO
9  REPLICS SEND UPDATES
10 UPDATES GET PROPOGATED
11 ROUTERS UPDATE FORWARDING TABLE

- Add event generator at Client
- 